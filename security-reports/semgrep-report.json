{"version":"1.131.0","results":[],"errors":[{"code":3,"level":"warn","type":"Lexical error","message":"Lexical error at line security-reports/safety-report.json:12:\n unrecognised symbol, in token rule:ï¿½","path":"security-reports/safety-report.json"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line safety-report.json:2:\n `login` was unexpected","path":"safety-report.json"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"yaml.github-actions.security.curl-eval.curl-eval","message":"Internal matching error when running yaml.github-actions.security.curl-eval.curl-eval on .github/workflows/pr-validation.yml:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nrule yaml.github-actions.security.curl-eval.curl-eval: metavariable-pattern failed when parsing $SHELL's content as Bash: echo \"## R`US Security Validation Summary\" > security-summary.md\necho \"**PR:** #$PR_NUMBER\" >> security-summary.md\necho \"**Branch:** $BRANCH_NAME\" >> security-summary.md\necho \"**Commit:** $COMMIT_SHA\" >> security-summary.md\necho \"**Date:** $(date)\" >> security-summary.md\necho \"\" >> security-summary.md\n\necho \"### R`TK Security Checks\" >> security-summary.md\nif [ -f \"safety-report.json\" ]; then\n  echo \"D]F **Safety (Dependencies):** Report generated\" >> security-summary.md\nelse\n  echo \"D^M **Safety (Dependencies):** No report found\" >> security-summary.md\nfi\n\nif [ -f \"bandit-report.json\" ]; then\n  echo \"D]F **Bandit (Python Security):** Report generated\" >> security-summary.md\nelse\n  echo \"D^M **Bandit (Python Security):** No report found\" >> security-summary.md\nfi\n\nif [ -f \"semgrep-report.json\" ]; then\n  echo \"D]F **Semgrep (Static Analysis):** Report generated\" >> security-summary.md\nelse\n  echo \"D^M **Semgrep (Static Analysis):** No report found\" >> security-summary.md\nfi\n\nif [ -f \"pip-audit-report.json\" ]; then\n  echo \"D]F **pip-audit (Package Vulnerabilities):** Report generated\" >> security-summary.md\nelse\n  echo \"D^M **pip-audit (Package Vulnerabilities):** No report found\" >> security-summary.md\nfi\n\necho \"\" >> security-summary.md\necho \"### R`hk Quality Checks\" >> security-summary.md\necho \"D]F **Code Formatting:** Black and isort\" >> security-summary.md\necho \"D]F **Linting:** Flake8 and Pylint\" >> security-summary.md\necho \"D]F **Type Checking:** MyPy\" >> security-summary.md\necho \"D]F **Tests:** pytest with coverage\" >> security-summary.md\necho \"D]F **Build:** Package installation and PyInstaller\" >> security-summary.md\n\necho \"\" >> security-summary.md\necho \"### R`TL Recommendations\" >> security-summary.md\necho \"- Review all security reports for vulnerabil... (truncated 250 more characters)","path":".github/workflows/pr-validation.yml"}],"paths":{"scanned":[".bandit",".coverage",".github/workflows/pr-validation.yml",".github/workflows/security-scan.yml",".idea/.gitignore",".idea/PythonProject.iml",".idea/inspectionProfiles/Project_Default.xml",".idea/misc.xml",".idea/modules.xml",".idea/vcs.xml",".pre-commit-config.yaml",".safety-project.ini",".semgrep.yml","LICENSE","Makefile","README.md","collections.json","data/examples/collections.json","data/examples/environments.json","data/examples/postman_sample_collection.json","data/examples/postman_sample_environment.json","data/examples/postman_workspace.json","data/examples/sample_collection.json","data/examples/sample_environment.json","docs/BUILD_GUIDE.md","docs/FEATURES.md","docs/QUICKSTART.md","docs/SECURITY.md","docs/SECURITY_SETUP_SUMMARY.md","docs/TESTING.md","docs/TROUBLESHOOTING.md","environments.json","main.py","pip-audit-report.json","pytest.ini","requirements-security.txt","requirements.txt","safety-report.json","scripts/build_macos.sh","scripts/build_windows.bat","scripts/run.bat","scripts/run.sh","scripts/run_tests.py","scripts/security_scan.py","scripts/setup_security.sh","security-config.yaml","security-reports/bandit-report.json","security-reports/coverage.xml","security-reports/pip-audit-report.json","security-reports/safety-report.json","security-reports/security-summary.json","security-reports/semgrep-report.json","semgrep-report.json","sendapi.spec","setup.py","src/__init__.py","src/__pycache__/__init__.cpython-313.pyc","src/__pycache__/batch_request_runner.cpython-313.pyc","src/__pycache__/environment_panel.cpython-313.pyc","src/__pycache__/main_window.cpython-313.pyc","src/__pycache__/models.cpython-313.pyc","src/__pycache__/postman_importer.cpython-313.pyc","src/__pycache__/request_panel.cpython-313.pyc","src/__pycache__/request_runner.cpython-313.pyc","src/__pycache__/response_panel.cpython-313.pyc","src/__pycache__/sidebar.cpython-313.pyc","src/batch_request_runner.py","src/environment_panel.py","src/main_window.py","src/models.py","src/postman_importer.py","src/request_panel.py","src/request_runner.py","src/response_panel.py","src/sidebar.py"]},"time":{"rules":[],"rules_parse_time":0.7223570346832275,"profiling_times":{"config_time":2.310800075531006,"core_time":1.4346230030059814,"ignores_time":0.0005540847778320312,"total_time":3.746385097503662},"parsing_time":{"total_time":0.1361396312713623,"per_file_time":{"mean":0.003679449493820603,"std_dev":1.4591019809250221e-05},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":1.6518664360046387,"per_file_time":{"mean":0.008740034052934597,"std_dev":0.001108330278207541},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":0.8713300228118896,"per_file_and_rule_time":{"mean":0.0022929737442418142,"std_dev":3.534865913112967e-05},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.2610955238342285,"per_def_and_rule_time":{"mean":0.00029942147228695934,"std_dev":2.156029066189723e-06},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"targets":[],"total_bytes":0,"max_memory_bytes":1091659392},"engine_requested":"OSS","skipped_rules":[]}